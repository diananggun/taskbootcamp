Dian Anggun Septiani1. Kesimpulan Ini merupakan hasil pitest mutation testing, alat pengujian otomatis yang digunakan dalam pengembangan perangkat lunak untuk meningkatkan kualitas pengujian. Pitest melakukan mutasi kode sumber dengan sengaja, mengubah kode asli dengan modifikasi kecil yang disebut mutan. Setiap mutan mewakili kesalahan potensial dalam kode yang diuji. Tujuan dari mutasi ini adalah untuk menguji seberapa baik pengujian unit mendeteksi mutasi dan apakah pengujian unit mampu mengungkapkan kesalahan dalam kode.Number of classes = 1  Ini berarti terdapat satu kelas dalam paket com.hascode.tutorial.entity. Line coverage 67% 6/9  Ini berarti ada 9 baris kode dalam kelas tersebut, dan pengujian mencakup 6 dari 9 baris tersebut. Persentase cakupan baris kode adalah 67% (6 dari 9). Mutation coverage 67% 2/3  Ini mengacu pada pengujian mutasi yang telah dijelaskan sebelumnya. Ada 3 mutan yang telah diterapkan pada kode sumber, dan dari ketiga mutan tersebut, 2 mutan berhasil terdeteksi oleh pengujian. Persentase cakupan mutasi adalah 67% (2 dari 3).Number of classes = 1": Ini berarti terdapat satu kelas dalam paket com.hascode.tutorial.service. Line coverage 100% 6/6  Ini berarti ada 6 baris kode dalam kelas tersebut, dan pengujian mencakup semua 6 baris tersebut. Persentase cakupan baris kode adalah 100% (6 dari 6), yang berarti semua baris kode telah dieksekusi selama pengujian. Mutation coverage 75% 3/4 mengacu pada pengujian mutasi yang telah dijelaskan sebelumnya. Ada 4 mutan yang telah diterapkan pada kode sumber, dan dari keempat mutan tersebut, 3 mutan berhasil terdeteksi oleh pengujian. Persentase cakupan mutasi adalah 75% (3 dari 4).2. KesimpulanAda kelas CalculatorServiceImpl yang menyediakan layanan untuk melakukan operasi matematika sederhana, yaitu penjumlahan dan pengurangan. Metode add digunakan untuk melakukan penjumlahan dua bilangan. Metode ini memiliki dua parameter a dan b yang mewakili dua bilangan yang akan dijumlahkan. Kemudian terdapat variabel lokal c yang digunakan untuk menyimpan hasil penjumlahan dari a dan b. Selanjutnya, return c untuk mengembalikan nilai variabel c, sehingga hasil penjumlahan dapat dikembalikan sebagai hasil dari metode add.Metode subtract digunakan untuk melakukan pengurangan dua bilangan. Metode ini juga memiliki dua parameter a dan b yang mewakili dua bilangan yang akan dikurangi. Terdapat variabel lokal c yang digunakan untuk menyimpan hasil pengurangan dari a dan b. Selanjutnya, return c untuk mengembalikan nilai variabel c, sehingga hasil pengurangan dapat dikembalikan sebagai hasil dari metode subtract.